<!-- Navigation Icons -->
<style>
    .badge-notification {
        position: absolute;
        top: -5px;
        right: -5px;
        font-size: 10px;
        background-color: #FF9800;
        color: white;
        border-radius: 50%;
        padding: 3px 6px;
        min-width: 16px;
        text-align: center;
    }

    .nav-icon {
        position: relative;
        display: inline-block;
    }

    .navbar-nav.ms-auto {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .nav-item {
        display: flex;
        align-items: center;
    }

    .user-profile {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 5px 10px;
        border-radius: 20px;
        transition: background-color 0.3s ease;
    }

    .user-profile:hover {
        background-color: rgba(255, 152, 0, 0.1);
    }

    .user-profile img {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        object-fit: cover;
    }

    .user-profile span {
        color: #666;
        font-weight: 500;
    }

    .dropdown-menu {
        margin-top: 10px;
        border-radius: 10px;
        border: none;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .dropdown-item {
        padding: 8px 16px;
        color: #666;
        transition: all 0.3s ease;
    }

    .dropdown-item:hover {
        background-color: rgba(255, 152, 0, 0.1);
        color: #FF9800;
    }

    .dropdown-item i {
        width: 20px;
        text-align: center;
        margin-right: 8px;
        color: #666;
    }

    .dropdown-item:hover i {
        color: #FF9800;
    }

    /* Mobile Styles */
    @media (max-width: 991.98px) {
        .navbar-nav.ms-auto {
            flex-direction: row;
            justify-content: center;
            width: 100%;
            margin-top: 1rem;
        }

        .nav-item {
            margin: 0 5px;
        }

        .user-profile span {
            display: none;
        }

        .dropdown-menu {
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            min-width: 200px;
        }
    }

    /* Small Mobile Styles */
    @media (max-width: 575.98px) {
        .navbar-nav.ms-auto {
            gap: 0.5rem;
        }

        .nav-icon {
            font-size: 1.2rem;
        }

        .badge-notification {
            font-size: 8px;
            padding: 2px 4px;
            min-width: 14px;
            top: -3px;
            right: -3px;
        }

        .user-profile img {
            width: 28px;
            height: 28px;
        }
    }
</style>

<ul class="navbar-nav ms-auto">
    <li class="nav-item dropdown">
        <a class="nav-link user-profile dropdown-toggle" 
           href="#" 
           id="userDropdown" 
           role="button" 
           data-bs-toggle="dropdown">
            <img src="https://ui-avatars.com/api/?name=<%= locals.user ? locals.user.name : 'User' %>&background=FF9800&color=fff" 
                 alt="Profile">
            <span class="d-none d-lg-inline"><%= locals.user ? locals.user.name : 'Guest' %></span>
        </a>
        <ul class="dropdown-menu dropdown-menu-end">
            <% if (locals.isAuthenticated) { %>
                <li><a class="dropdown-item" href="/users/profile"><i class="fas fa-user"></i>Profile</a></li>
                <li><a class="dropdown-item" href="/orders"><i class="fas fa-box"></i>Orders</a></li>
                <li><a class="dropdown-item" href="/settings"><i class="fas fa-cog"></i>Settings</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="/users/logout"><i class="fas fa-sign-out-alt"></i>Logout</a></li>
            <% } else { %>
                <li><a class="dropdown-item" href="/users/login"><i class="fas fa-sign-in-alt"></i>Login</a></li>
                <li><a class="dropdown-item" href="/users/register"><i class="fas fa-user-plus"></i>Register</a></li>
            <% } %>
        </ul>
    </li>
    <li class="nav-item">
        <a class="nav-link nav-icon" href="/users/wishlist" title="Wishlist">
            <i class="fas fa-heart"></i>
            <span class="badge-notification wishlist-count"><%= locals.wishlistCount || 0 %></span>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link nav-icon" href="/cart" title="Cart">
            <i class="fas fa-shopping-cart"></i>
            <span class="badge-notification cart-count"><%= locals.cartCount || 0 %></span>
        </a>
    </li>
</ul>

<script>
    // Function to update cart count
    function updateCartCount(count) {
        document.querySelectorAll('.cart-count').forEach(elem => {
            elem.textContent = count;
        });
    }
    
    // Function to update wishlist count
    function updateWishlistCount(count) {
        document.querySelectorAll('.wishlist-count').forEach(elem => {
            elem.textContent = count;
        });
    }
    
    // Update cart and wishlist counts on page load
    document.addEventListener('DOMContentLoaded', async function() {
        // Check if user is authenticated
        if (document.querySelector('.dropdown-item[href="/users/logout"]')) {
            try {
                // Fetch cart count
                const cartResponse = await fetch('/cart/count', {
                    headers: { 'Accept': 'application/json' }
                });
                if (cartResponse.ok) {
                    const cartData = await cartResponse.json();
                    if (cartData.success) {
                        updateCartCount(cartData.count);
                    }
                }
                
                // Fetch wishlist count
                const wishlistResponse = await fetch('/users/wishlist/count', {
                    headers: { 'Accept': 'application/json' }
                });
                if (wishlistResponse.ok) {
                    const wishlistData = await wishlistResponse.json();
                    if (wishlistData.success) {
                        updateWishlistCount(wishlistData.count);
                    }
                }
            } catch (error) {
                console.error('Error fetching item counts:', error);
            }
        }
    });
    
    // Make functions available globally
    window.updateCartCount = updateCartCount;
    window.updateWishlistCount = updateWishlistCount;
</script> 