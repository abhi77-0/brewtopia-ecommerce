<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #FF6B35;
            --secondary: #FFD166;
            --dark: #1A1A1A;
            --light: #F7F7F7;
        }
        
        body {
            margin: 0;
            padding: 0;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            background: var(--dark);
            font-family: 'Montserrat', sans-serif;
            color: var(--light);
            overflow: hidden;
        }

        .error-container {
            position: relative;
            width: 90%;
            max-width: 800px;
            padding: 40px 20px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 30px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 20px 50px rgba(0, 0, 0, 0.3);
            overflow: hidden;
            margin: 20px;
        }

        .error-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, 
                rgba(255, 107, 53, 0.1) 0%,
                rgba(255, 209, 102, 0.1) 100%);
            z-index: -1;
        }

        .error-content {
            position: relative;
            z-index: 1;
            text-align: center;
            padding: 0 10px;
        }

        .error-code {
            font-size: clamp(100px, 20vw, 180px);
            font-weight: 700;
            margin: 0;
            line-height: 1;
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 0 0 30px rgba(255, 107, 53, 0.3);
            animation: glow 2s ease-in-out infinite alternate;
        }

        .error-title {
            font-size: clamp(24px, 5vw, 36px);
            font-weight: 600;
            margin: 20px 0;
            color: var(--light);
            text-transform: uppercase;
            letter-spacing: 2px;
        }

        .error-message {
            font-size: clamp(16px, 3vw, 18px);
            color: rgba(255, 255, 255, 0.8);
            line-height: 1.6;
            max-width: 500px;
            margin: 0 auto;
            padding: 0 10px;
        }

        .beer-icon {
            font-size: clamp(60px, 15vw, 100px);
            margin-bottom: 20px;
            display: inline-block;
            animation: float 3s ease-in-out infinite;
        }

        @keyframes float {
            0% { transform: translateY(0) rotate(0deg); }
            50% { transform: translateY(-10px) rotate(5deg); }
            100% { transform: translateY(0) rotate(0deg); }
        }

        @keyframes glow {
            0% { text-shadow: 0 0 30px rgba(255, 107, 53, 0.3); }
            100% { text-shadow: 0 0 40px rgba(255, 209, 102, 0.4); }
        }

        .decorative-elements {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            pointer-events: none;
            z-index: 0;
        }

        .circle {
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 107, 53, 0.1);
            animation: pulse 4s ease-in-out infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); opacity: 0.5; }
            50% { transform: scale(1.2); opacity: 0.2; }
            100% { transform: scale(1); opacity: 0.5; }
        }

        /* Media Queries */
        @media (max-width: 768px) {
            .error-container {
                padding: 30px 15px;
                margin: 15px;
                border-radius: 20px;
            }

            .error-content {
                padding: 0 5px;
            }

            .error-message {
                padding: 0 5px;
            }
        }

        @media (max-width: 480px) {
            .error-container {
                padding: 20px 10px;
                margin: 10px;
                border-radius: 15px;
            }

            .error-title {
                margin: 15px 0;
            }

            .beer-icon {
                margin-bottom: 15px;
            }
        }

        @media (max-width: 320px) {
            .error-container {
                padding: 15px 5px;
                margin: 5px;
            }

            .error-code {
                font-size: 80px;
            }

            .error-title {
                font-size: 20px;
            }

            .error-message {
                font-size: 14px;
            }
        }
    </style>
</head>
<body>
    <div class="error-container">
        <div class="decorative-elements" id="decorative"></div>
        <div class="error-content">
            <div class="beer-icon">üç∫</div>
            <h1 class="error-code">404</h1>
            <h2 class="error-title">Page Not Found</h2>
            <p class="error-message">Looks like this page has gone for a beer break!</p>
        </div>
    </div>

    <script>
        // Create decorative circles
        function createDecorations() {
            const decorative = document.getElementById('decorative');
            for (let i = 0; i < 5; i++) {
                const circle = document.createElement('div');
                circle.className = 'circle';
                const size = Math.random() * 200 + 100;
                circle.style.width = `${size}px`;
                circle.style.height = `${size}px`;
                circle.style.left = `${Math.random() * 100}%`;
                circle.style.top = `${Math.random() * 100}%`;
                circle.style.animationDelay = `${Math.random() * 4}s`;
                decorative.appendChild(circle);
            }
        }
        createDecorations();
    </script>
</body>
</html> 