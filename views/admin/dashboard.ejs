<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Brewtopia Admin</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        :root {
            --primary-color: #5D4037;
            --secondary-color: #8D6E63;
            --accent-color: #FF9800;
            --light-bg: #f8f9fa;
            --dark-text: #343a40;
            --card-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            --sidebar-width: 260px;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5;
            color: var(--dark-text);
        }
        
        /* Sidebar Styles */
        .admin-layout {
            display: flex;
            min-height: 100vh;
        }
        
        .sidebar {
            width: var(--sidebar-width);
            background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));
            color: white;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            transition: all 0.3s;
            z-index: 1000;
        }
        
        .sidebar-header {
            padding: 1.5rem;
            text-align: center;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .sidebar-brand {
            font-size: 1.5rem;
            font-weight: 700;
            color: white;
            text-decoration: none;
        }
        
        .sidebar-menu {
            padding: 1rem 0;
        }
        
        .menu-header {
            font-size: 0.8rem;
            text-transform: uppercase;
            letter-spacing: 1px;
            color: rgba(255, 255, 255, 0.5);
            padding: 0.75rem 1.5rem;
            margin-top: 1rem;
        }
        
        .nav-link {
            padding: 0.75rem 1.5rem;
            color: rgba(255, 255, 255, 0.8);
            display: flex;
            align-items: center;
            transition: all 0.3s;
            border-left: 3px solid transparent;
        }
        
        .nav-link:hover, .nav-link.active {
            background-color: rgba(255, 255, 255, 0.1);
            color: white;
            border-left-color: var(--accent-color);
        }
        
        .nav-link i {
            margin-right: 0.75rem;
            width: 20px;
            text-align: center;
        }
        
        /* Main Content Styles */
        .main-content {
            flex: 1;
            margin-left: var(--sidebar-width);
            padding: 2rem;
            transition: all 0.3s;
        }
        
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }
        
        .page-title {
            font-weight: 600;
            color: var(--primary-color);
            margin: 0;
        }
        
        .user-dropdown img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid white;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        
        /* Card Styles */
        .stat-card {
            background-color: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: var(--card-shadow);
            transition: transform 0.3s, box-shadow 0.3s;
            height: 100%;
            display: flex;
            flex-direction: column;
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
        }
        
        .stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            margin-bottom: 1.25rem;
        }
        
        .stat-icon.text-primary {
            background-color: rgba(13, 110, 253, 0.1);
            color: #0d6efd;
        }
        
        .stat-icon.text-success {
            background-color: rgba(25, 135, 84, 0.1);
            color: #198754;
        }
        
        .stat-icon.text-warning {
            background-color: rgba(255, 193, 7, 0.1);
            color: #ffc107;
        }
        
        .stat-icon.text-info {
            background-color: rgba(13, 202, 240, 0.1);
            color: #0dcaf0;
        }
        
        .stat-card h3 {
            font-size: 1.75rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }
        
        /* Chart Container */
        .chart-container {
            background-color: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: var(--card-shadow);
            margin-bottom: 2rem;
        }
        
        .chart-wrapper {
            position: relative;
            height: 300px;
        }
        
        /* Top Items Container */
        .top-items-container {
            background-color: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: var(--card-shadow);
            margin-bottom: 2rem;
            height: 100%;
        }
        
        .top-item {
            display: flex;
            align-items: center;
            padding: 0.75rem 0;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }
        
        .top-item:last-child {
            border-bottom: none;
        }
        
        .top-item-image-container {
            width: 45px;
            height: 45px;
            min-width: 45px;
            margin-right: 1rem;
            border-radius: 8px;
            overflow: hidden;
            background-color: #f5f5f5;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .top-item-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .top-item-icon {
            width: 45px;
            height: 45px;
            min-width: 45px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
            background-color: rgba(0, 0, 0, 0.05);
            margin-right: 1rem;
        }
        
        .top-item-details {
            flex: 1;
            min-width: 0; /* Prevents flex items from overflowing */
        }
        
        .top-item-details h6 {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
        .top-item-stats {
            text-align: right;
            min-width: 80px; /* Ensures stats have enough space */
        }
        
        /* Button Styles */
        .btn-outline-primary {
            border-color: var(--primary-color);
            color: var(--primary-color);
        }
        
        .btn-outline-primary:hover, .btn-outline-primary.active {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            color: white;
        }
        
        /* Responsive */
        @media (max-width: 992px) {
            .sidebar {
                width: 70px;
                text-align: center;
            }
            
            .sidebar-brand, .menu-header {
                display: none;
            }
            
            .nav-link span {
                display: none;
            }
            
            .nav-link i {
                margin-right: 0;
                font-size: 1.25rem;
            }
            
            .main-content {
                margin-left: 70px;
            }
        }
        
        @media (max-width: 768px) {
            .main-content {
                padding: 1rem;
            }
        }

        .graph-container {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: var(--card-shadow);
            margin-bottom: 2rem;
        }

        .graph-wrapper {
            position: relative;
            height: 400px;
            margin-top: 2rem;
            padding: 20px;
        }

        .graph {
            display: flex;
            height: 100%;
            position: relative;
            padding-left: 60px; /* Space for y-axis labels */
        }

        .y-axis {
            position: absolute;
            left: 0;
            top: 0;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            padding-right: 10px;
        }

        .y-label {
            color: #64748b;
            font-size: 12px;
        }

        .bars-container {
            display: flex;
            align-items: flex-end;
            gap: 15px;
            height: 100%;
            width: 100%;
            padding-bottom: 30px; /* Space for x-axis labels */
            border-left: 2px solid #e2e8f0;
            border-bottom: 2px solid #e2e8f0;
        }

        .bar-item {
            flex: 1;
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
        }

        .bar {
            width: 40px;
            background: linear-gradient(to top, var(--primary-color), var(--secondary-color));
            border-radius: 4px 4px 0 0;
            transition: all 0.3s ease;
            position: relative;
        }

        .bar:hover {
            opacity: 0.8;
        }

        .bar:hover::after {
            content: attr(data-value) " (" attr(data-date) ")";
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            white-space: nowrap;
            margin-bottom: 4px;
            z-index: 1;
        }

        .x-label {
            position: absolute;
            bottom: -25px;
            font-size: 12px;
            color: #64748b;
            transform: rotate(-45deg);
            white-space: nowrap;
        }

        .no-data {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="admin-layout">
       
        <%- include('./partials/sidebar') %>
        
        <!-- Main Content -->
        <div class="main-content">
            <div class="page-header">
                <h1 class="page-title">Dashboard</h1>
            </div>
            
            <% if (typeof error !== 'undefined' && error) { %>
                <div class="alert alert-danger">
                    <%= error %>
                </div>
            <% } %>
            
            <!-- Stats Overview -->
            <div class="row g-4 mb-4">
                <div class="col-md-3">
                    <div class="stat-card text-center">
                        <div class="stat-icon text-primary mx-auto">
                            <i class="fas fa-shopping-cart"></i>
                        </div>
                        <h3><%= totalOrders.toLocaleString() %></h3>
                        <p class="text-muted mb-0">Total Orders</p>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-card text-center">
                        <div class="stat-icon text-success mx-auto">
                            <i class="fas fa-rupee-sign"></i>
                        </div>
                        <h3>₹<%= totalRevenue.toLocaleString() %></h3>
                        <p class="text-muted mb-0">Total Revenue</p>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-card text-center">
                        <div class="stat-icon text-warning mx-auto">
                            <i class="fas fa-beer"></i>
                        </div>
                        <h3><%= totalProducts %></h3>
                        <p class="text-muted mb-0">Total Products</p>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-card text-center">
                        <div class="stat-icon text-info mx-auto">
                            <i class="fas fa-users"></i>
                        </div>
                        <h3><%= totalUsers %></h3>
                        <p class="text-muted mb-0">Total Users</p>
                    </div>
                </div>
            </div>

            <!-- Sales Chart - Modern UI -->
            <div class="chart-container">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h4 class="mb-0">Sales Overview</h4>
                    <div class="d-flex gap-2">
                        <form id="periodForm" class="d-flex">
                            <select class="form-select form-select-sm" name="period" onchange="this.form.submit()">
                                <option value="daily" <%= period === 'daily' ? 'selected' : '' %>>Daily</option>
                                <option value="weekly" <%= period === 'weekly' ? 'selected' : '' %>>Weekly</option>
                                <option value="monthly" <%= period === 'monthly' ? 'selected' : '' %>>Monthly</option>
                                <option value="yearly" <%= period === 'yearly' ? 'selected' : '' %>>Yearly</option>
                            </select>
                        </form>
                    </div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-md-3">
                        <div class="card border-0 bg-light">
                            <div class="card-body p-3">
                                <h6 class="text-muted mb-1">Total Sales</h6>
                                <h4 class="mb-0">₹<%= salesData.reduce((sum, item) => sum + item.sales, 0).toLocaleString() %></h4>
                                <div class="small text-success mt-1">
                                    <i class="fas fa-arrow-up"></i> 
                                    <%= Math.round((salesData.length > 1 ? 
                                        (salesData[salesData.length-1].sales / salesData[salesData.length-2].sales - 1) * 100 : 0)) %>% from previous period
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card border-0 bg-light">
                            <div class="card-body p-3">
                                <h6 class="text-muted mb-1">Total Orders</h6>
                                <h4 class="mb-0"><%= salesData.reduce((sum, item) => sum + item.count, 0) %></h4>
                                <div class="small text-success mt-1">
                                    <i class="fas fa-arrow-up"></i> 
                                    <%= Math.round((salesData.length > 1 ? 
                                        (salesData[salesData.length-1].count / salesData[salesData.length-2].count - 1) * 100 : 0)) %>% from previous period
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card border-0 bg-light">
                            <div class="card-body p-3">
                                <h6 class="text-muted mb-1">Avg. Order Value</h6>
                                <h4 class="mb-0">₹<%= Math.round(salesData.reduce((sum, item) => sum + item.sales, 0) / 
                                    Math.max(1, salesData.reduce((sum, item) => sum + item.count, 0))).toLocaleString() %></h4>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="chart-wrapper position-relative" style="height: 300px;">
                    <canvas id="salesChart"></canvas>
                    <div id="chartNoData" class="position-absolute top-50 start-50 translate-middle text-center d-none">
                        <i class="fas fa-chart-bar fa-3x text-muted mb-2"></i>
                        <p class="text-muted">No sales data available for the selected period</p>
                    </div>
                </div>
            </div>

            <div class="row">
                <!-- Top Products -->
                <div class="col-md-4">
                    <div class="top-items-container">
                        <h4 class="mb-3">Top Selling Products</h4>
                        <% if (topProducts && topProducts.length > 0) { %>
                            <% topProducts.forEach(product => { %>
                                <div class="top-item">
                                    <div class="top-item-details">
                                        <h6 class="mb-0" title="<%= product.name %>"><%= product.name %></h6>
                                    </div>
                                    <div class="top-item-stats">
                                        <div class="fw-bold"><%= product.totalSold %> sold</div>
                                        <div class="text-success">₹<%= product.revenue.toLocaleString() %></div>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <p class="text-muted">No product data available</p>
                        <% } %>
                    </div>
                </div>

                <!-- Top Categories -->
                <div class="col-md-4">
                    <div class="top-items-container">
                        <h4 class="mb-3">Top Selling Categories</h4>
                        <% if (topCategories && topCategories.length > 0) { %>
                            <% topCategories.forEach(category => { %>
                                <div class="top-item">
                                    <div class="top-item-icon me-3">
                                        <i class="fas fa-list fa-2x text-primary"></i>
                                    </div>
                                    <div class="top-item-details">
                                        <h6 class="mb-0"><%= category.name %></h6>
                                    </div>
                                    <div class="top-item-stats">
                                        <div class="fw-bold"><%= category.totalSold %> sold</div>
                                        <div class="text-success">₹<%= category.revenue.toLocaleString() %></div>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <p class="text-muted">No category data available</p>
                        <% } %>
                    </div>
                </div>

                <!-- Top Brands -->
                <div class="col-md-4">
                    <div class="top-items-container">
                        <h4 class="mb-3">Top Selling Brands</h4>
                        <% if (topBrands && topBrands.length > 0) { %>
                            <% topBrands.forEach(brand => { %>
                                <div class="top-item">
                                    <div class="top-item-icon me-3">
                                        <i class="fas fa-tag fa-2x text-warning"></i>
                                    </div>
                                    <div class="top-item-details">
                                        <h6 class="mb-0"><%= brand.name %></h6>
                                    </div>
                                    <div class="top-item-stats">
                                        <div class="fw-bold"><%= brand.totalSold %> sold</div>
                                        <div class="text-success">₹<%= brand.revenue.toLocaleString() %></div>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <p class="text-muted">No brand data available</p>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- Wallet Transactions Section -->
            <div class="row mt-4">
                <div class="col-md-12">
                    <div class="top-items-container">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h4 class="mb-0">Recent Payment Transactions</h4>
                            <a href="/admin/wallet-management" class="btn btn-sm btn-outline-primary">View All</a>
                        </div>
                        
                        <% if (recentWalletTransactions && recentWalletTransactions.length > 0) { %>
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Transaction ID</th>
                                            <th>Date</th>
                                            <th>User</th>
                                            <th>Type</th>
                                            <th>Amount</th>
                                            <th>Description</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% recentWalletTransactions.forEach(transaction => { %>
                                            <tr>
                                                <td><small class="text-muted"><%= transaction._id.toString().slice(-8).toUpperCase() %></small></td>
                                                <td><small><%= new Date(transaction.date).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' }) %></small></td>
                                                <td><%= transaction.userName || 'Unknown User' %></td>
                                                <td>
                                                    <% if (transaction.type === 'credit') { %>
                                                        <span class="badge bg-success">Credit</span>
                                                    <% } else { %>
                                                        <span class="badge bg-danger">Debit</span>
                                                    <% } %>
                                                </td>
                                                <td class="<%= transaction.type === 'credit' ? 'text-success' : 'text-danger' %>">
                                                    <%= transaction.type === 'credit' ? '+' : '-' %>₹<%= transaction.amount.toLocaleString() %>
                                                </td>
                                                <td><small class="text-truncate d-inline-block" style="max-width: 200px;"><%= transaction.description %></small></td>
                                            </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                            </div>
                        <% } else { %>
                            <p class="text-muted">No recent payment transactions</p>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Chart initialization script - place at the end of the file before </body> -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Sales Chart
            const salesData = <%- JSON.stringify(salesData || []) %>;
            let salesChart;
            
            // Chart type buttons
            const chartTypeButtons = document.querySelectorAll('[data-chart-type]');
            chartTypeButtons.forEach(button => {
                button.addEventListener('click', function() {
                    // Remove active class from all buttons
                    chartTypeButtons.forEach(btn => btn.classList.remove('active'));
                    // Add active class to clicked button
                    this.classList.add('active');
                    // Update chart type
                    updateChartType(this.dataset.chartType);
                });
            });
            
            function updateChartType(type) {
                if (!salesChart) return;
                
                if (type === 'bar') {
                    salesChart.config.type = 'bar';
                    salesChart.data.datasets[0].type = undefined;
                    salesChart.data.datasets[0].fill = false;
                } else if (type === 'line') {
                    salesChart.config.type = 'line';
                    salesChart.data.datasets[0].type = undefined;
                    salesChart.data.datasets[0].fill = false;
                } else if (type === 'area') {
                    salesChart.config.type = 'line';
                    salesChart.data.datasets[0].type = undefined;
                    salesChart.data.datasets[0].fill = 'origin';
                }
                
                salesChart.update();
            }
            
            if (salesData && salesData.length > 0) {
                const labels = salesData.map(item => item.date);
                const salesValues = salesData.map(item => item.sales);
                const orderCounts = salesData.map(item => item.count);
                
                const ctx = document.getElementById('salesChart').getContext('2d');
                
                // Create gradient for area chart
                const salesGradient = ctx.createLinearGradient(0, 0, 0, 300);
                salesGradient.addColorStop(0, 'rgba(54, 162, 235, 0.5)');
                salesGradient.addColorStop(1, 'rgba(54, 162, 235, 0.0)');
                
                const ordersGradient = ctx.createLinearGradient(0, 0, 0, 300);
                ordersGradient.addColorStop(0, 'rgba(255, 99, 132, 0.5)');
                ordersGradient.addColorStop(1, 'rgba(255, 99, 132, 0.0)');
                
                salesChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [
                            {
                                label: 'Sales (₹)',
                                data: salesValues,
                                backgroundColor: 'rgba(54, 162, 235, 0.7)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 2,
                                borderRadius: 4,
                                yAxisID: 'y',
                                fill: false
                            },
                            {
                                label: 'Orders',
                                data: orderCounts,
                                type: 'line',
                                backgroundColor: ordersGradient,
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 2,
                                pointBackgroundColor: 'rgba(255, 99, 132, 1)',
                                pointBorderColor: '#fff',
                                pointRadius: 4,
                                pointHoverRadius: 6,
                                yAxisID: 'y1',
                                fill: false
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        interaction: {
                            mode: 'index',
                            intersect: false,
                        },
                        plugins: {
                            legend: {
                                position: 'top',
                                labels: {
                                    usePointStyle: true,
                                    boxWidth: 6
                                }
                            },
                            tooltip: {
                                backgroundColor: 'rgba(0, 0, 0, 0.7)',
                                padding: 10,
                                cornerRadius: 6,
                                titleFont: {
                                    size: 14
                                },
                                bodyFont: {
                                    size: 13
                                },
                                callbacks: {
                                    label: function(context) {
                                        let label = context.dataset.label || '';
                                        if (label) {
                                            label += ': ';
                                        }
                                        if (context.datasetIndex === 0) {
                                            label += '₹' + context.parsed.y.toLocaleString();
                                        } else {
                                            label += context.parsed.y;
                                        }
                                        return label;
                                    }
                                }
                            }
                        },
                        scales: {
                            x: {
                                grid: {
                                    display: false
                                }
                            },
                            y: {
                                type: 'linear',
                                display: true,
                                position: 'left',
                                title: {
                                    display: true,
                                    text: 'Sales (₹)'
                                },
                                grid: {
                                    borderDash: [2, 4]
                                }
                            },
                            y1: {
                                type: 'linear',
                                display: true,
                                position: 'right',
                                grid: {
                                    display: false
                                },
                                title: {
                                    display: true,
                                    text: 'Orders'
                                }
                            }
                        }
                    }
                });
                
                // Hide the no data message
                document.getElementById('chartNoData').classList.add('d-none');
            } else {
                // Show the no data message
                document.getElementById('chartNoData').classList.remove('d-none');
            }
        });
    </script>
</body>
</html> 