<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Coupons - Brewtopia Admin</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <!-- SweetAlert2 -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #5D4037;
            --secondary-color: #8D6E63;
            --accent-color: #FF9800;
            --light-bg: #f8f9fa;
            --dark-text: #343a40;
            --card-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            --sidebar-width: 260px;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5;
            color: var(--dark-text);
        }
        
        /* Admin layout */
        .admin-layout {
            display: flex;
            min-height: 100vh;
        }
        
        /* Main Content Styles */
        .main-content {
            flex: 1;
            margin-left: var(--sidebar-width);
            padding: 2rem;
            transition: all 0.3s;
        }
        
        .table td {
            vertical-align: middle;
        }
        
        /* Responsive adjustments */
        @media (max-width: 768px) {
            .main-content {
                margin-left: 0;
            }
        }
    </style>
</head>
<body>
    <div class="admin-layout">
        <%- include('./partials/sidebar') %>

        <!-- Main Content -->
        <div class="main-content">
            <div class="container-fluid">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2>Manage Coupons</h2>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCouponModal">
                        <i class="fas fa-plus"></i> Add New Coupon
                    </button>
                </div>

                <% if (messages && messages.success && messages.success.length > 0) { %>
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <%= messages.success %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                <% } %>

                <% if (messages && messages.error && messages.error.length > 0) { %>
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <%= messages.error %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                <% } %>

                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Code</th>
                                        <th>Discount</th>
                                        <th>Min. Purchase</th>
                                        <th>Usage/Limit</th>
                                        <th>Valid From</th>
                                        <th>Valid Until</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% coupons.forEach(coupon => { %>
                                        <tr>
                                            <td><%= coupon.code %></td>
                                            <td>₹<%= coupon.discountAmount %></td>
                                            <td>₹<%= coupon.minimumPurchase %></td>
                                            <td><%= coupon.usedCount || 0 %>/<%= coupon.usageLimit || '∞' %></td>
                                            <td><%= new Date(coupon.startDate).toLocaleDateString() %> <%= new Date(coupon.startDate).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) %></td>
                                            <td><%= new Date(coupon.endDate).toLocaleDateString() %> <%= new Date(coupon.endDate).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) %></td>
                                            <td>
                                                <div class="form-check form-switch">
                                                    <input class="form-check-input" type="checkbox" 
                                                        onchange="toggleCouponStatus('<%= coupon._id %>')"
                                                        <%= coupon.isActive ? 'checked' : '' %>>
                                                    <span class="ms-2 badge <%= coupon.isActive ? 'bg-success' : 'bg-danger' %>">
                                                        <%= coupon.isActive ? 'Active' : 'Inactive' %>
                                                    </span>
                                                </div>
                                            </td>
                                            <td>
                                                <button class="btn btn-sm btn-danger"
                                                        onclick="deleteCoupon('<%= coupon._id %>')">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Coupon Modal -->
    <div class="modal fade" id="addCouponModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Coupon</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="addCouponForm" method="POST">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Coupon Code</label>
                            <input type="text" class="form-control" name="code" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" name="description" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Discount Amount (₹)</label>
                            <input type="number" class="form-control" name="discountAmount" required min="1">
                            <small class="text-muted">Enter the fixed discount amount in rupees</small>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Minimum Purchase</label>
                            <input type="number" class="form-control" name="minimumPurchase" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Start Date and Time (UTC)</label>
                            <input type="datetime-local" class="form-control" name="startDate" required>
                            <small class="text-muted">Current time is shown in your local timezone, but stored as UTC</small>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">End Date and Time (UTC)</label>
                            <input type="datetime-local" class="form-control" name="endDate" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Usage Limit</label>
                            <input type="number" class="form-control" name="usageLimit">
                            <small class="text-muted">Leave empty for unlimited uses</small>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Create Coupon</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <script>
        function toggleCouponStatus(couponId) {
            fetch(`/admin/coupons/${couponId}/toggle`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Success',
                        text: data.message,
                        icon: 'success',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000
                    });
                } else {
                    throw new Error(data.message);
                }
            })
            .catch(error => {
                Swal.fire({
                    title: 'Error',
                    text: error.message || 'Failed to update coupon status',
                    icon: 'error',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000
                });
            });
        }

        // Add this function for deleting coupons
        function deleteCoupon(couponId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/coupons/${couponId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => {
                        // Check if the response is JSON
                        const contentType = response.headers.get('content-type');
                        if (contentType && contentType.includes('application/json')) {
                            return response.json().then(data => {
                                if (!response.ok) {
                                    throw new Error(data.message || 'Failed to delete coupon');
                                }
                                return data;
                            });
                        } else {
                            // If not JSON, handle as text
                            return response.text().then(text => {
                                throw new Error('Server returned non-JSON response. Check if the delete route is properly configured.');
                            });
                        }
                    })
                    .then(data => {
                        Swal.fire({
                            title: 'Deleted!',
                            text: data.message || 'Coupon deleted successfully',
                            icon: 'success'
                        }).then(() => {
                            window.location.reload();
                        });
                    })
                    .catch(error => {
                        console.error('Delete error:', error);
                        Swal.fire({
                            title: 'Error',
                            text: error.message || 'Failed to delete coupon',
                            icon: 'error'
                        });
                    });
                }
            });
        }

        // Set default dates when opening the modal
        document.getElementById('addCouponModal').addEventListener('show.bs.modal', function () {
            // Get current date and time in ISO format
            const now = new Date();
            const localISOString = new Date(now.getTime() - (now.getTimezoneOffset() * 60000))
                .toISOString().slice(0, 16);
            
            document.querySelector('input[name="startDate"]').value = localISOString;
            
            // Set end date to one month from now
            const nextMonth = new Date(now);
            nextMonth.setMonth(nextMonth.getMonth() + 1);
            const nextMonthISOString = new Date(nextMonth.getTime() - (nextMonth.getTimezoneOffset() * 60000))
                .toISOString().slice(0, 16);
            
            document.querySelector('input[name="endDate"]').value = nextMonthISOString;
        });
    </script>

    <!-- Add the form submission script here, after SweetAlert is loaded -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const addCouponForm = document.getElementById('addCouponForm');
            
            if (addCouponForm) {
                addCouponForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    
                    // Create form data object
                    const formData = new FormData(this);
                    const formDataObj = {};
                    
                    formData.forEach((value, key) => {
                        formDataObj[key] = value;
                    });
                    
                    // Send AJAX request
                    fetch('/admin/coupons', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formDataObj)
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Success message
                            Swal.fire({
                                title: 'Success!',
                                text: data.message,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            // Error message
                            Swal.fire({
                                title: 'Error!',
                                text: data.message,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Generic error message
                        Swal.fire({
                            title: 'Error!',
                            text: 'Something went wrong. Please try again.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    });
                });
            } else {
                console.error('Form element not found');
            }
        });
    </script>
</body>
</html> 