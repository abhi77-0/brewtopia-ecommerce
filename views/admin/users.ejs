<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Brewtopia Admin</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <style>
        :root {
            --primary: #2563eb;
            --secondary: #64748b;
            --success: #10b981;
            --danger: #ef4444;
            --warning: #f59e0b;
            --info: #3b82f6;
            --light: #f1f5f9;
            --dark: #0f172a;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8fafc;
            color: #1e293b;
        }

        /* Dashboard Layout */
        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        .main-content {
            flex: 1;
            padding: 2rem;
            margin-left: 260px;
        }

        /* Header Section */
        .content-header {
            margin-bottom: 2rem;
        }

        .page-title {
            font-size: 1.875rem;
            font-weight: 600;
            color: var(--dark);
            margin-bottom: 0.5rem;
        }

        /* Stats Cards */
        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: white;
            border-radius: 1rem;
            padding: 1.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s;
        }

        .stat-card:hover {
            transform: translateY(-2px);
        }

        .stat-icon {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 1rem;
            font-size: 1.5rem;
        }

        .stat-title {
            color: var(--secondary);
            font-size: 0.875rem;
            margin-bottom: 0.5rem;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--dark);
        }

        /* Search Bar */
        .search-bar {
            background: white;
            border-radius: 1rem;
            padding: 1rem;
            margin-bottom: 2rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .search-input {
            border: 1px solid #e2e8f0;
            border-radius: 0.5rem;
            padding: 0.75rem 1rem;
            width: 100%;
            transition: all 0.2s;
        }

        .search-input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
        }

        /* Users Table */
        .table-container {
            background: white;
            border-radius: 1rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .table {
            margin-bottom: 0;
        }

        .table thead {
            background: #f8fafc;
        }

        .table th {
            padding: 1rem;
            font-weight: 600;
            color: var(--secondary);
            text-transform: uppercase;
            font-size: 0.75rem;
            letter-spacing: 0.05em;
        }

        .table td {
            padding: 1rem;
            vertical-align: middle;
        }

        .table tr {
            transition: all 0.2s;
        }

        .table tbody tr:hover {
            background: #f8fafc;
        }

        /* User Avatar */
        .user-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
        }

        .user-name {
            font-weight: 500;
            color: var(--dark);
            margin: 0;
        }

        .user-email {
            color: var(--secondary);
            font-size: 0.875rem;
            margin: 0;
        }

        /* Status Badge */
        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 9999px;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .status-active {
            background: #dcfce7;
            color: #166534;
        }

        .status-blocked {
            background: #fee2e2;
            color: #991b1b;
        }

        /* Action Buttons */
        .btn-action {
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all 0.2s;
        }

        .btn-block {
            background: var(--danger);
            color: white;
            border: none;
        }

        .btn-unblock {
            background: var(--success);
            color: white;
            border: none;
        }

        .btn-action:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 3rem;
        }

        .empty-state i {
            font-size: 3rem;
            color: var(--secondary);
            margin-bottom: 1rem;
        }

        .empty-state p {
            color: var(--secondary);
            font-size: 0.875rem;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .main-content {
                margin-left: 0;
                padding: 1rem;
            }

            .stats-container {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <%- include('./partials/sidebar') %>

        <div class="main-content">
            <div class="content-header">
                <h1 class="page-title">User Management</h1>
                <p class="text-secondary">Manage and monitor user accounts</p>
            </div>

            <!-- Stats Cards -->
            <div class="stats-container">
                <div class="stat-card">
                    <div class="stat-icon" style="background: #dbeafe; color: var(--primary);">
                        <i class="fas fa-users"></i>
                    </div>
                    <div class="stat-title">Total Users</div>
                    <div class="stat-value"><%= users.length %></div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon" style="background: #dcfce7; color: var(--success);">
                        <i class="fas fa-user-check"></i>
                    </div>
                    <div class="stat-title">Active Users</div>
                    <div class="stat-value"><%= users.filter(user => !user.blocked).length %></div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon" style="background: #fee2e2; color: var(--danger);">
                        <i class="fas fa-user-slash"></i>
                    </div>
                    <div class="stat-title">Blocked Users</div>
                    <div class="stat-value"><%= users.filter(user => user.blocked).length %></div>
                </div>
            </div>

            <!-- Search Bar -->
            <div class="search-bar">
                <input type="text" class="search-input" placeholder="Search users by name or email...">
            </div>

            <!-- Users Table -->
            <div class="table-container">
                <table class="table">
                    <thead>
                        <tr>
                            <th>User</th>
                            <th>Join Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (users && users.length > 0) { %>
                            <% users.forEach(user => { %>
                                <tr>
                                    <td>
                                        <div class="user-info">
                                            <img src="/uploads/default-avatar.jpg" alt="<%= user.name %>" class="user-avatar">
                                            <div>
                                                <p class="user-name"><%= user.name %></p>
                                                <p class="user-email"><%= user.email %></p>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <%= new Date(user.createdAt).toLocaleDateString('en-US', {
                                            year: 'numeric',
                                            month: 'short',
                                            day: 'numeric'
                                        }) %>
                                    </td>
                                    <td>
                                        <span class="status-badge <%= user.blocked ? 'status-blocked' : 'status-active' %>">
                                            <%= user.blocked ? 'Blocked' : 'Active' %>
                                        </span>
                                    </td>
                                    <td>
                                        <button onclick="toggleBlockUser('<%= user._id %>', <%= user.blocked %>)" 
                                                class="btn-action <%= user.blocked ? 'btn-unblock' : 'btn-block' %>">
                                            <i class="fas <%= user.blocked ? 'fa-unlock' : 'fa-ban' %> me-2"></i>
                                            <%= user.blocked ? 'Unblock' : 'Block' %>
                                        </button>
                                    </td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="4">
                                    <div class="empty-state">
                                        <i class="fas fa-users"></i>
                                        <p>No users found</p>
                                    </div>
                                </td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <script>
        async function toggleBlockUser(userId, isBlocked) {
            try {
                const result = await Swal.fire({
                    title: isBlocked ? 'Unblock User?' : 'Block User?',
                    text: isBlocked ? 
                        'This user will be able to access their account again.' : 
                        'This user will not be able to access their account.',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: isBlocked ? '#10B981' : '#EF4444',
                    cancelButtonColor: '#64748b',
                    confirmButtonText: isBlocked ? 'Yes, unblock!' : 'Yes, block!',
                    cancelButtonText: 'Cancel',
                    reverseButtons: true
                });

                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'Processing...',
                        text: 'Please wait while we update the user status.',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        showConfirmButton: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    const response = await fetch(`/admin/users/${userId}/block`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    const data = await response.json();
                    
                    if (!response.ok) {
                        throw new Error(data.error || 'Failed to toggle user status');
                    }

                    await Swal.fire({
                        title: 'Success!',
                        text: isBlocked ? 'User has been unblocked.' : 'User has been blocked.',
                        icon: 'success',
                        confirmButtonColor: '#10B981'
                    });

                    window.location.reload();
                }
            } catch (error) {
                console.error('Error toggling user status:', error);
                
                await Swal.fire({
                    title: 'Error!',
                    text: error.message || 'Something went wrong.',
                    icon: 'error',
                    confirmButtonColor: '#EF4444'
                });
            }
        }

        // Search functionality
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.querySelector('.search-input');
            const tableRows = document.querySelectorAll('tbody tr');

            searchInput.addEventListener('input', function(e) {
                const searchTerm = e.target.value.toLowerCase();

                tableRows.forEach(row => {
                    const userName = row.querySelector('.user-name')?.textContent.toLowerCase() || '';
                    const userEmail = row.querySelector('.user-email')?.textContent.toLowerCase() || '';
                    
                    if (userName.includes(searchTerm) || userEmail.includes(searchTerm)) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
        });
    </script>
</body>
</html> 