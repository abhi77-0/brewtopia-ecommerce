<!DOCTYPE html>
<html lang="en">
<head>
    <title>Verify OTP</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #F8F9FA 0%, #E9ECEF 100%);
            min-height: 100vh;
            color: #333;
            line-height: 1.6;
        }

        .navbar {
            background: #ffffff;
            padding: 1rem 0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .navbar-brand {
            font-size: 1.8rem;
            font-weight: 700;
            color: #FF9800 !important;
        }

        .auth-container {
            max-width: 500px;
            margin: 2rem auto;
            background: white;
            border-radius: 24px;
            overflow: hidden;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            color: black;
            padding: 2rem;
        }

        .form-title {
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 1.5rem;
            color: #343a40;
            text-align: center;
        }

        .btn-primary {
            background: #FF9800;
            border: none;
            padding: 0.6rem 1.2rem;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            background: #E67E22;
            transform: translateY(-2px);
        }

        .footer {
            text-align: center;
            padding: 1rem;
            background: #ffffff;
            color: #333;
            margin-top: 2rem;
            box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.1);
        }

        .alert {
            margin-bottom: 20px;
            border-radius: 8px;
        }

        .btn-resend {
            display: block;
            background: transparent;
            border: 1px solid #FF9800;
            color: #FF9800;
            padding: 0.6rem 1.2rem;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-top: 1rem;
            width: 100%;
        }

        .btn-resend:hover:not(:disabled) {
            background: #FFF3E0;
        }

        .btn-resend:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        #timer {
            display: block;
            text-align: center;
            font-size: 0.9rem;
            color: #dc3545;
            margin-top: 0.5rem;
            font-weight: 500;
        }

        #statusMessage {
            margin-top: 1rem;
            text-align: center;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-light">
        <div class="container">
            <a class="navbar-brand" href="/">
                <i class="fas fa-beer me-2"></i>Brewtopia
            </a>
        </div>
    </nav>

    <div class="container">
        <div class="auth-container">
            <h2 class="form-title">Verify OTP</h2>
            
            <% if (typeof error !== 'undefined' && error) { %>
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <%= error %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            <% } %>

            <form action="/users/verify-otp" method="POST" id="otpForm">
                <div class="mb-3">
                    <label class="form-label">Enter OTP</label>
                    <input type="text" class="form-control" name="otp" required>
                    <div class="text-center mt-2">
                        <span id="timer" class="text-danger"></span>
                    </div>
                </div>
                <input type="hidden" name="email" value="<%= email %>">
                <input type="hidden" name="isEmailUpdate" value="<%= typeof isEmailUpdate !== 'undefined' ? isEmailUpdate : false %>">
                <button type="submit" class="btn btn-primary w-100" id="verifyButton">Verify OTP</button>
            </form>
            
            <button class="btn btn-resend" id="resendButton" onclick="resendOTP()">
                Resend OTP
            </button>
            
            <div id="statusMessage" class="mt-3"></div>
        </div>
    </div>

    <footer class="footer">
        &copy; 2025 Brewtopia. All rights reserved.
    </footer>

    <script>
        let resendTimer;
        const MAX_RESEND_ATTEMPTS = 3;
        let resendAttempts = 0;
        let timeLeft = 60;

        function updateTimerDisplay() {
            const timerElement = document.getElementById('timer');
            timerElement.textContent = `Time remaining: ${timeLeft}s`;
        }

        function startResendTimer() {
            const resendButton = document.getElementById('resendButton');
            resendButton.disabled = true;
            
            // Check if there's a stored timer value in localStorage
            const storedEndTime = localStorage.getItem('otpTimerEndTime');
            const email = document.querySelector('input[name="email"]').value;
            const storedEmail = localStorage.getItem('otpEmail');
            
            // Check for stored resend attempts
            const storedAttempts = localStorage.getItem('otpResendAttempts');
            if (storedAttempts && storedEmail === email) {
                resendAttempts = parseInt(storedAttempts);
                
                // If max attempts reached, disable resend button permanently
                if (resendAttempts >= MAX_RESEND_ATTEMPTS) {
                    resendButton.disabled = true;
                    const messageDiv = document.getElementById('statusMessage');
                    messageDiv.style.display = 'block';
                    messageDiv.className = 'alert alert-warning';
                    messageDiv.textContent = 'Maximum OTP resend attempts reached. Please start registration again.';
                    return;
                }
            }
            
            // Only use stored time if it's for the same email
            if (storedEndTime && storedEmail === email) {
                const now = new Date().getTime();
                const endTime = parseInt(storedEndTime);
                
                // Calculate remaining time
                if (endTime > now) {
                    timeLeft = Math.ceil((endTime - now) / 1000);
                } else {
                    // Timer expired
                    localStorage.removeItem('otpTimerEndTime');
                    resendButton.disabled = false;
                    document.getElementById('timer').textContent = 'Time expired';
                    return;
                }
            } else {
                // Set new end time (current time + 60 seconds)
                const endTime = new Date().getTime() + (timeLeft * 1000);
                localStorage.setItem('otpTimerEndTime', endTime.toString());
                localStorage.setItem('otpEmail', email);
            }
            
            updateTimerDisplay(); // Initial display
            
            if (!resendTimer) {
                resendTimer = setInterval(() => {
                    timeLeft--;
                    updateTimerDisplay();
                    
                    if (timeLeft <= 0) {
                        clearInterval(resendTimer);
                        resendTimer = null;
                        
                        // Only enable resend button if max attempts not reached
                        if (resendAttempts < MAX_RESEND_ATTEMPTS) {
                            resendButton.disabled = false;
                            resendButton.textContent = 'Resend OTP';
                        }
                        
                        timeLeft = 60;
                        document.getElementById('timer').textContent = 'Time expired';
                        localStorage.removeItem('otpTimerEndTime');
                        return;
                    }
                    resendButton.textContent = `Resend OTP (${timeLeft}s)`;
                }, 1000);
            }
        }

        // Modify the form submission to prevent page reload
        document.getElementById('otpForm').addEventListener('submit', function(e) {
            e.preventDefault(); // Prevent form from submitting normally

            const formData = new FormData(this);
            
            fetch('/users/verify-otp', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    email: formData.get('email'),
                    otp: formData.get('otp'),
                    isEmailUpdate: formData.get('isEmailUpdate') === 'true'
                })
            })
            .then(response => response.json())
            .then(data => {
                const messageDiv = document.getElementById('statusMessage');
                messageDiv.style.display = 'block';
                
                if (data.success) {
                    // If verification successful, clear timer data and redirect
                    localStorage.removeItem('otpTimerEndTime');
                    localStorage.removeItem('otpEmail');
                    window.location.href = data.redirectUrl || '/users/home';
                } else {
                    // Show error without affecting timer
                    messageDiv.className = 'alert alert-danger';
                    messageDiv.textContent = data.message || 'Invalid OTP. Please try again.';
                    document.querySelector('input[name="otp"]').value = ''; // Clear OTP input
                }
            })
            .catch(error => {
                console.error('Error:', error);
                const messageDiv = document.getElementById('statusMessage');
                
                messageDiv.style.display = 'block';
                messageDiv.className = 'alert alert-danger';
                messageDiv.textContent = 'Error verifying OTP. Please try again.';
            });
        });

        function resendOTP() {
            const email = document.querySelector('input[name="email"]').value;
            
            fetch('/users/resend-otp', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email })
            })
            .then(response => response.json())
            .then(data => {
                const messageDiv = document.getElementById('statusMessage');
                messageDiv.style.display = 'block';
                
                if (data.success) {
                    // Display the message from the server
                    messageDiv.className = 'alert alert-success';
                    messageDiv.textContent = data.message;
                    
                    // Reset timer
                    timeLeft = 60;
                    const endTime = new Date().getTime() + (timeLeft * 1000);
                    localStorage.setItem('otpTimerEndTime', endTime.toString());
                    
                    // Use server's resend count
                    if (data.resendCount !== undefined) {
                        resendAttempts = data.resendCount;
                        localStorage.setItem('otpResendAttempts', resendAttempts.toString());
                    }
                    
                    // Start the timer
                    startResendTimer();
                    
                    // If this was the last attempt, update UI accordingly
                    if (data.isLastAttempt) {
                        document.getElementById('resendButton').disabled = true;
                    }
                } else {
                    messageDiv.className = 'alert alert-danger';
                    messageDiv.textContent = data.message;
                    
                    if (data.maxAttemptsReached) {
                        document.getElementById('resendButton').disabled = true;
                        resendAttempts = MAX_RESEND_ATTEMPTS;
                        localStorage.setItem('otpResendAttempts', resendAttempts.toString());
                    }
                }
            })
            .catch(error => {
                console.error('Error:', error);
                const messageDiv = document.getElementById('statusMessage');
                messageDiv.style.display = 'block';
                messageDiv.className = 'alert alert-danger';
                messageDiv.textContent = 'Error sending OTP. Please try again.';
            });
        }

        // Start the timer when the page loads
        document.addEventListener('DOMContentLoaded', () => {
            console.log('Page loaded, starting timer...');
            startResendTimer();
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

