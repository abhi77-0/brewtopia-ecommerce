<%- include('../partials/profile-header') %>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="fw-bold">My Addresses</h2>
                <a href="/users/profile" class="btn btn-back">
                    <i class="fas fa-arrow-left me-2"></i>Back to Profile
                </a>
            </div>

            <!-- Address List -->
            <div class="addresses-container">
                <% if (addresses && addresses.length > 0) { %>
                    <% addresses.forEach((address, index) => { %>
                        <div class="address-card">
                            <div class="address-content">
                                <div class="address-type">
                                    <%= address.type || `Address ${index + 1}` %>
                                </div>
                                <div class="address-details">
                                    <p class="name"><%= address.name %></p>
                                    <p class="address-text">
                                        <%= address.street %>, <%= address.city %><br>
                                        <%= address.state %> - <%= address.pincode %>
                                    </p>
                                    <p class="phone">ðŸ“ž <%= address.phone %></p>
                                </div>
                            </div>
                            <div class="address-actions">
                                <button class="btn btn-edit-address" onclick="editAddress('<%= address._id %>')">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-delete-address" onclick="deleteAddress('<%= address._id %>')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    <% }); %>
                <% } %>

                <% if (!addresses || addresses.length < 3) { %>
                    <button class="btn btn-add-address" onclick="showAddAddressForm()">
                        <i class="fas fa-plus"></i>
                        Add New Address
                    </button>
                <% } %>
            </div>

            <!-- Add/Edit Address Modal -->
            <div class="modal fade" id="addressModal" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalTitle">Add New Address</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <form id="addressForm" novalidate>
                                <input type="hidden" id="addressId" name="addressId">
                                
                                <div class="mb-3">
                                    <label class="form-label">Address Type</label>
                                    <div class="btn-group w-100" role="group">
                                        <input type="radio" class="btn-check" name="type" id="typeHome" value="Home" checked>
                                        <label class="btn btn-outline-primary" for="typeHome">Home</label>

                                        <input type="radio" class="btn-check" name="type" id="typeWork" value="Work">
                                        <label class="btn btn-outline-primary" for="typeWork">Work</label>

                                        <input type="radio" class="btn-check" name="type" id="typeOther" value="Other">
                                        <label class="btn btn-outline-primary" for="typeOther">Other</label>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Full Name</label>
                                    <input type="text" class="form-control" name="name" required>
                                    <div class="invalid-feedback">Please enter the full name</div>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Phone Number</label>
                                    <input type="tel" class="form-control" name="phone" required pattern="[0-9]{10}">
                                    <div class="invalid-feedback">Please enter a valid 10-digit phone number</div>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Street Address</label>
                                    <textarea class="form-control" name="street" rows="2" required></textarea>
                                    <div class="invalid-feedback">Please enter the street address</div>
                                </div>

                                <div class="row mb-3">
                                    <div class="col">
                                        <label class="form-label">City</label>
                                        <input type="text" class="form-control" name="city" required>
                                        <div class="invalid-feedback">Please enter the city</div>
                                    </div>
                                    <div class="col">
                                        <label class="form-label">State</label>
                                        <input type="text" class="form-control" name="state" required>
                                        <div class="invalid-feedback">Please enter the state</div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">PIN Code</label>
                                    <input type="text" class="form-control" name="pincode" required pattern="[0-9]{6}">
                                    <div class="invalid-feedback">Please enter a valid 6-digit PIN code</div>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-primary" onclick="saveAddress()">Save Address</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.addresses-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.address-card {
    background: white;
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    transition: all 0.3s ease;
}

.address-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.address-type {
    font-weight: 600;
    color: #FF9800;
    margin-bottom: 0.5rem;
}

.address-details p {
    margin: 0.25rem 0;
    color: #4B5563;
}

.address-details .name {
    font-weight: 500;
    color: #1F2937;
}

.address-actions {
    display: flex;
    gap: 0.5rem;
}

.btn-edit-address,
.btn-delete-address {
    padding: 0.5rem;
    border-radius: 8px;
    border: none;
    transition: all 0.3s ease;
}

.btn-edit-address {
    background: #E3F2FD;
    color: #2196F3;
}

.btn-delete-address {
    background: #FBE9E7;
    color: #F44336;
}

.btn-add-address {
    background: #FFF3E0;
    color: #FF9800;
    border: 2px dashed #FFB74D;
    border-radius: 12px;
    padding: 1rem;
    width: 100%;
    text-align: center;
    transition: all 0.3s ease;
}

.btn-add-address:hover {
    background: #FFE0B2;
    color: #F57C00;
}

.btn-back {
    background: #f1f5f9;
    color: #475569;
    border: none;
    padding: 0.625rem 1.25rem;
    border-radius: 12px;
    font-weight: 500;
    transition: all 0.3s ease;
}

.btn-back:hover {
    background: #e2e8f0;
    color: #1e293b;
    transform: translateY(-2px);
}

.modal-content {
    border-radius: 12px;
}

.modal-header {
    border-bottom: none;
    padding: 1.5rem 1.5rem 0.5rem;
}

.modal-footer {
    border-top: none;
    padding: 0.5rem 1.5rem 1.5rem;
}

.btn-check:checked + .btn-outline-primary {
    background-color: #FF9800;
    border-color: #FF9800;
    color: white;
}

.btn-outline-primary {
    color: #FF9800;
    border-color: #FF9800;
}

.btn-outline-primary:hover {
    background-color: #FF9800;
    border-color: #FF9800;
    color: white;
}

@media (max-width: 768px) {
    .address-card {
        flex-direction: column;
        gap: 1rem;
    }

    .address-actions {
        width: 100%;
        justify-content: flex-end;
    }
}
</style>

<script>
let addressModal;

document.addEventListener('DOMContentLoaded', function() {
    addressModal = new bootstrap.Modal(document.getElementById('addressModal'));
});

function showAddAddressForm() {
    document.getElementById('modalTitle').textContent = 'Add New Address';
    document.getElementById('addressForm').reset();
    document.getElementById('addressId').value = '';
    addressModal.show();
}

function editAddress(addressId) {
    document.getElementById('modalTitle').textContent = 'Edit Address';
    // Fetch address details and populate form
    fetch(`/users/address/${addressId}`)
        .then(response => response.json())
        .then(address => {
            document.getElementById('addressId').value = address._id;
            document.getElementById('addressForm').elements['type'].value = address.type;
            document.getElementById('addressForm').elements['name'].value = address.name;
            document.getElementById('addressForm').elements['phone'].value = address.phone;
            document.getElementById('addressForm').elements['street'].value = address.street;
            document.getElementById('addressForm').elements['city'].value = address.city;
            document.getElementById('addressForm').elements['state'].value = address.state;
            document.getElementById('addressForm').elements['pincode'].value = address.pincode;
            addressModal.show();
        });
}

function saveAddress() {
    const form = document.getElementById('addressForm');
    if (!form.checkValidity()) {
        form.classList.add('was-validated');
        return;
    }

    const formData = new FormData(form);
    const addressId = formData.get('addressId');
    const url = addressId ? `/users/address/${addressId}` : '/users/address';
    const method = addressId ? 'PUT' : 'POST';

    fetch(url, {
        method: method,
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(Object.fromEntries(formData))
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            location.reload();
        } else {
            alert(data.message || 'Error saving address');
        }
    });
}

function deleteAddress(addressId) {
    if (confirm('Are you sure you want to delete this address?')) {
        fetch(`/users/address/${addressId}`, {
            method: 'DELETE'
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload();
            } else {
                alert(data.message || 'Error deleting address');
            }
        });
    }
}
</script>

<%- include('../partials/footer') %> 